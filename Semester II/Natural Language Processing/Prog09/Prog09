import nltk
from nltk import CFG


grammar = CFG.fromstring("""
  S -> NP VP
  NP -> Det N | Det N PP
  VP -> V NP | VP PP
  PP -> P NP
  Det -> 'a' | 'the'
  N -> 'dog' | 'cat' | 'park'
  V -> 'saw' | 'ate'
  P -> 'in' | 'on' | 'by'
""")


parser = nltk.ChartParser(grammar)

def check_grammar(sentence):
    
    tokens = sentence.lower().split()
    
    
    try:
        parses = list(parser.parse(tokens))
        if parses:
            return True, parses
        else:
            return False, []
    except Exception as e:
        return False, []

def suggest_corrections(sentence):
    
    
    return "Please check the sentence structure."


def grammar_checker(sentence):
    is_correct, parses = check_grammar(sentence)
    if is_correct:
        print("The sentence is grammatically correct.")
        for parse in parses:
            print(parse)
    else:
        print("The sentence is grammatically incorrect.")
        corrections = suggest_corrections(sentence)
        print(corrections)


if __name__ == "__main__":
    test_sentence = "the dog saw a cat"
    grammar_checker(test_sentence)
